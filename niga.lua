--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v82=v2(v0(v30,16));if v19 then local v90=0;local v91;while true do if (v90==1) then return v91;end if (v90==0) then v91=v5(v82,v19);v19=nil;v90=1;end end else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/((5 -3)^(v32-((1 + 1) -1))))%(2^(((v33-1) -(v32-(1 -0))) + 1)) ;return v83-(v83%(2 -(878 -(282 + 595)))) ;else local v84=619 -(555 + (1701 -(1523 + 114))) ;local v85;while true do if (v84==(931 -(857 + 74))) then v85=2^(v32-(569 -(367 + 201))) ;return (((v31%(v85 + v85))>=v85) and (928 -(214 + 713))) or (0 + 0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (2 -0) ;return (v36 * (1321 -(68 + 997))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (1273 -(226 + 1044)) );v18=v18 + (17 -13) ;return (v40 * (16777333 -((989 -(892 + 65)) + 85))) + (v39 * (64226 + 1310)) + (v38 * (57 + 199)) + v37 ;end local function v24() local v41=0 -0 ;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==(5 -2)) then if (v46==0) then if (v45==0) then return v47 * ((438 -(145 + 293)) -0) ;else v46=351 -(87 + (1011 -748)) ;v44=180 -(67 + 113) ;end elseif (v46==((1932 -(44 + 386)) + 545)) then return ((v45==(0 -0)) and (v47 * (((1487 -(998 + 488)) + 0)/(0 -(442 -(416 + 26)))))) or (v47 * NaN) ;end return v8(v47,v46-1023 ) * (v44 + (v45/((954 -(802 + 150))^(139 -87)))) ;end if (v41==(1 -(0 -0))) then v44=1;v45=(v20(v43,1 + 0 ,1017 -(915 + 82) ) * (2^(90 -58))) + v42 ;v41=2 + 0 ;end if (v41==(2 -(0 + 0))) then v46=v20(v43,(990 + 218) -(1069 + 118) ,70 -39 );v47=((v20(v43,(841 -(201 + 571)) -(16 + 21) )==(1 + 0)) and  -(1 -0)) or (1 + 0) ;v41=794 -(368 + 423) ;end if (v41==((0 -0) -(1138 -(116 + 1022)))) then v42=v23();v43=v23();v41=19 -(10 + 8) ;end end end local function v25(v48) local v49;if  not v48 then local v86=0 -0 ;while true do if (v86==(0 + 0)) then v48=v23();if (v48==(0 -0)) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -(3 -2) );v18=v18 + v48 ;local v50={};for v65=1, #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 374 -(123 + 251) ;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v67=(function() return 0;end)();while true do if (v67==(0 -0)) then if (v51==1) then local v96=(function() return 1384 -(746 + 638) ;end)();local v97=(function() return;end)();while true do if ((698 -(208 + 490))~=v96) then else v97=(function() return 0 + 0 ;end)();while true do if (v97~=(342 -(218 + 123))) then else local v127=(function() return 0;end)();while true do if ((1 + 0)~=v127) then else v97=(function() return 2;end)();break;end if ((836 -(660 + 176))==v127) then v58=(function() return {};end)();for v149= #"!",v57 do local v150=(function() return 0 + 0 ;end)();local v151=(function() return;end)();local v152=(function() return;end)();local v153=(function() return;end)();while true do if (v150~=(203 -(14 + 188))) then else v153=(function() return nil;end)();while true do if (v151==(675 -(534 + 141))) then v152=(function() return v21();end)();v153=(function() return nil;end)();v151=(function() return 1 + 0 ;end)();end if ((1 + 0)==v151) then if (v152== #"[") then v153=(function() return v21()~=(0 + 0) ;end)();elseif (v152==(2 + 0)) then v153=(function() return v24();end)();elseif (v152== #"91(") then v153=(function() return v25();end)();end v58[v149]=(function() return v153;end)();break;end end break;end if (v150==(0 + 0)) then v151=(function() return 0 -0 ;end)();v152=(function() return nil;end)();v150=(function() return 1 -0 ;end)();end end end v127=(function() return 1 -0 ;end)();end end end if (v97~=(0 -0)) then else v56=(function() return {v53,v54,nil,v55};end)();v57=(function() return v23();end)();v97=(function() return 1 + 0 ;end)();end if (v97==(4 -2)) then v51=(function() return 2;end)();break;end end break;end end end if (v51~=(2 + 0)) then else v56[ #"xxx"]=(function() return v21();end)();for v100= #"|",v23() do local v101=(function() return v21();end)();if (v20(v101, #"\\", #"\\")==0) then local v103=(function() return 0;end)();local v104=(function() return;end)();local v105=(function() return;end)();local v106=(function() return;end)();while true do if (v103==(399 -(115 + 281))) then if (v20(v105, #"19(", #"-19")== #",") then v106[ #"xnxx"]=(function() return v58[v106[ #"0836"]];end)();end v53[v100]=(function() return v106;end)();break;end if (v103~=(2 -1)) then else local v129=(function() return 0 + 0 ;end)();local v130=(function() return;end)();while true do if (v129==(0 -0)) then v130=(function() return 0 -0 ;end)();while true do if (v130==(1457 -(282 + 1174))) then v103=(function() return 869 -(550 + 317) ;end)();break;end if (v130==(0 -0)) then v106=(function() return {v22(),v22(),nil,nil};end)();if (v104==(0 + 0)) then local v156=(function() return 0 -0 ;end)();while true do if (v156==(1251 -(721 + 530))) then v106[ #"gha"]=(function() return v22();end)();v106[ #".dev"]=(function() return v22();end)();break;end end elseif (v104== #"!") then v106[ #"xnx"]=(function() return v23();end)();elseif (v104==(1273 -(945 + 326))) then v106[ #"-19"]=(function() return v23() -(2^(39 -23)) ;end)();elseif (v104== #"asd") then local v163=(function() return 0 -0 ;end)();local v164=(function() return;end)();while true do if (v163==(285 -(134 + 151))) then v164=(function() return 700 -(271 + 429) ;end)();while true do if (v164==(1665 -(970 + 695))) then v106[ #"91("]=(function() return v23() -((3 -1)^(2006 -(582 + 1408))) ;end)();v106[ #"?id="]=(function() return v22();end)();break;end end break;end end end v130=(function() return 3 -2 ;end)();end end break;end end end if ((2 -0)~=v103) then else if (v20(v105, #"[", #"{")~= #"<") then else v106[2]=(function() return v58[v106[7 -5 ]];end)();end if (v20(v105,1088 -(461 + 625) ,1826 -(1195 + 629) )== #">") then v106[ #"-19"]=(function() return v58[v106[ #"19("]];end)();end v103=(function() return 3 -0 ;end)();end if (v103==(241 -(187 + 54))) then local v131=(function() return 1171 -(418 + 753) ;end)();local v132=(function() return;end)();while true do if (v131==0) then v132=(function() return 780 -(162 + 618) ;end)();while true do if (v132==0) then v104=(function() return v20(v101,2 + 0 , #"asd");end)();v105=(function() return v20(v101, #"?id=",4 + 2 );end)();v132=(function() return 1 -0 ;end)();end if (v132==1) then v103=(function() return 530 -(406 + 123) ;end)();break;end end break;end end end end end end for v102= #"]",v23() do v54,v102,v28=(function() return v52(v54,v102,v28);end)();end return v56;end v67=(function() return 1770 -(1749 + 20) ;end)();end if ((1 + 0)~=v67) then else if (0~=v51) then else local v99=(function() return 0 -0 ;end)();while true do if (v99==(1 + 0)) then v54=(function() return {};end)();v55=(function() return {};end)();v99=(function() return 2;end)();end if (v99==2) then v51=(function() return 1 + 0 ;end)();break;end if (v99==0) then v52=(function() return function(v120,v121,v122) local v123=(function() return 1636 -(1373 + 263) ;end)();local v124=(function() return;end)();while true do if (v123~=(0 -0)) then else v124=(function() return 1000 -(451 + 549) ;end)();while true do if (v124~=0) then else local v154=(function() return 0 -0 ;end)();local v155=(function() return;end)();while true do if (v154==0) then v155=(function() return 1900 -(106 + 1794) ;end)();while true do if (v155~=0) then else local v161=(function() return 0 + 0 ;end)();while true do if (v161==(0 -0)) then v120[v121-#"~" ]=(function() return v122();end)();return v120,v121,v122;end end end end break;end end end end break;end end end;end)();v53=(function() return {};end)();v99=(function() return 1;end)();end end end break;end end end end local function v29(v59,v60,v61) local v62=v59[1 + 0 + (1329 -(797 + 532)) ];local v63=v59[5 -3 ];local v64=v59[7 -(981 -(553 + 424)) ];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=115 -(3 + 1 + 110) ;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -(585 -(57 + 527)) ;local v77={};local v78={};for v87=0 -0 ,v76 do if (v87>=v70) then v74[v87-v70 ]=v75[v87 + (1428 -(41 + 1221 + 165)) ];else v78[v87]=v75[v87 + 1 ];end end local v79=(v76-v70) + 1 + 0 ;local v80;local v81;while true do v80=v68[v72];v81=v80[104 -(17 + 86) ];if (v81<=(7 + 0 + 2)) then if (v81<=(8 -4)) then if (v81<=(2 -1)) then if (v81>0) then v72=v80[169 -(122 + 44) ];else v78[v80[2 -0 ]]=v78[v80[9 -6 ]];end elseif ((518<902) and (v81<=((4 -2) + 0))) then v72=v80[3];elseif ((2994>858) and (v81>(1 + 2))) then for v141=v80[3 -1 ],v80[68 -(30 + 35) ] do v78[v141]=nil;end else local v133=v80[2 + (1202 -(373 + 829)) ];v78[v133]=v78[v133](v78[v133 + 1 + 0 ]);end elseif (v81<=(1263 -(1043 + (945 -(476 + 255))))) then if (v81>(18 -13)) then for v125=v80[1214 -(323 + 889) ],v80[7 -4 ] do v78[v125]=nil;end else v78[v80[2]]();end elseif (v81<=(587 -((1491 -(369 + 761)) + 219))) then v78[v80[322 -(53 + 155 + 112) ]]=v80[1 + 2 ];elseif ((v81>(421 -(15 + 398))) or (3755<=915)) then do return;end else v78[v80[984 -(18 + 964) ]]=v78[v80[(5 + 6) -8 ]];end elseif (v81<=14) then if (v81<=(7 + 4)) then if (v81==(7 + 3)) then local v113=850 -(20 + 830) ;local v114;while true do if ((3946>3743) and (v113==(0 + 0))) then v114=v80[2];v78[v114]=v78[v114](v78[v114 + 1 + 0 ]);break;end end else v78[v80[2]]=v61[v80[129 -(116 + 10) ]];end elseif ((v81<=(1 + (19 -8))) or (1335>=3306)) then v78[v80[740 -(542 + (370 -174)) ]]=v80[3];elseif (v81==((58 -31) -14)) then v78[v80[2]]();else v78[v80[1 + 1 ]]={};end elseif (v81<=16) then if ((4844>2253) and (v81==(8 + 7))) then do return;end else v78[v80[1 + 1 ]]={};end elseif (v81<=(44 -27)) then if (v78[v80[4 -(240 -(64 + 174)) ]]==v80[1555 -(1126 + (1183 -758)) ]) then v72=v72 + (406 -((264 -146) + 41 + 246)) ;else v72=v80[1 + 2 ];end elseif (v81>(70 -(251 -199))) then v78[v80[755 -(239 + 514) ]]=v61[v80[(1663 -539) -(118 + 1003) ]];elseif (v78[v80[5 -3 ]]==v80[381 -(142 + 235) ]) then v72=v72 + (4 -3) ;else v72=v80[3];end v72=v72 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
